model AdmissionRound {
    admissionRoundId   Int           @id @default(autoincrement()) @map("admission_round_id")
    admissionRound     Int           @map("admission_round")
    admissionRoundName String?       @map("admission_round_name") @db.VarChar(100)
    factStudent        FactStudent[]

    @@map("admission_round")
}

model Building {
    buildingId   Int     @id @default(autoincrement()) @map("building_Id")
    buildingName String? @map("building_name") @db.VarChar(255)
    buildingCode String  @map("building_code") @db.VarChar(10)
    room         Room[]

    @@map("building")
}

model Classroom {
    classroomId Int       @id @default(autoincrement()) @map("classroom_id")
    classId     Int       @map("class_id")
    roomId      Int       @map("room_id")
    factClass   FactClass @relation(fields: [classId], references: [classId], onDelete: Cascade, map: "fk_classroom_class")
    room        Room      @relation(fields: [roomId], references: [roomId], onDelete: Cascade, map: "fk_classroom_room")

    @@index([classId], map: "idx_class_id")
    @@index([roomId], map: "idx_room_id")
    @@map("classroom")
}

model Classtime {
    classtimeId                               Int             @id @default(autoincrement()) @map("classtime_id")
    startTime                                 DateTime        @map("start_time") @db.Time(0)
    endTime                                   DateTime        @map("end_time") @db.Time(0)
    timePeriod                                String?         @map("time_period") @db.VarChar(50)
    duration                                  Decimal?        @db.Decimal(4, 2)
    factClassFactClassClasstimeId1Toclasstime FactClass[]     @relation("fact_class_classtime_id1Toclasstime")
    factClassFactClassClasstimeId2Toclasstime FactClass[]     @relation("fact_class_classtime_id2Toclasstime")
    factRoomUsage                             FactRoomUsage[]

    @@map("classtime")
}

model Department {
    deptId      Int           @id @default(autoincrement()) @map("dept_id")
    deptCode    String        @map("dept_code") @db.VarChar(10)
    deptName    String        @map("dept_name") @db.VarChar(30)
    deptAliasTh String        @map("dept_alias_th") @db.VarChar(20)
    course      Course[]
    factStudent FactStudent[]
    teacher     Teacher[]

    @@map("department")
}

model DimDate {
    dateKey       Int             @id @map("date_key")
    fullDate      DateTime        @map("full_date") @db.Date
    day           Int
    dayName       String          @map("day_name") @db.VarChar(20)
    dayOfWeek     Int             @map("day_of_week")
    weekNumber    Int             @map("week_number")
    weekStartDate DateTime        @map("week_start_date") @db.Date
    weekEndDate   DateTime        @map("week_end_date") @db.Date
    month         Int
    monthName     String          @map("month_name") @db.VarChar(20)
    quarter       Int
    year          Int
    isWeekend     Boolean         @map("is_weekend")
    factRoomUsage FactRoomUsage[]

    @@map("dim_date")
}

model FactClass {
    classId                                   Int                    @id @default(autoincrement()) @map("class_id")
    subjectId                                 Int?                   @map("subject_id")
    courseId                                  Int                    @map("course_id")
    classtimeId1                              Int?                   @map("classtime_id1")
    classtimeId2                              Int?                   @map("classtime_id2")
    semesterYear                              Int?                   @map("semester_year")
    semesterPart                              FactClassSemesterPart?
    sec                                       Int?
    secType                                   FactClassSecType?
    classCapacity                             String?                @map("class_capacity") @db.VarChar(45)
    dayName1                                  String                 @map("day_name1") @db.VarChar(3)
    dayName2                                  String?                @map("day_name2") @db.VarChar(3)
    createdAt                                 DateTime               @default(now()) @map("created_at") @db.Timestamp(0)
    isCurrent                                 Boolean?               @default(true) @map("is_current")
    effectiveStartTs                          DateTime               @default(now()) @map("effective_start_ts") @db.Timestamp(0)
    effectiveEndTs                            DateTime?              @map("effective_end_ts") @db.Timestamp(0)
    changeComment                             String?                @map("change_comment") @db.VarChar(255)
    classroom                                 Classroom[]
    course                                    Course                 @relation(fields: [courseId], references: [courseId], onUpdate: Restrict, map: "fact_class_ibfk_1")
    classtimeFactClassClasstimeId1Toclasstime Classtime?             @relation("fact_class_classtime_id1Toclasstime", fields: [classtimeId1], references: [classtimeId], onDelete: Restrict, onUpdate: Restrict, map: "fk_fact_class_classtime1")
    classtimeFactClassClasstimeId2Toclasstime Classtime?             @relation("fact_class_classtime_id2Toclasstime", fields: [classtimeId2], references: [classtimeId], onDelete: Restrict, onUpdate: Restrict, map: "fk_fact_class_classtime2")
    subject                                   Subject?               @relation(fields: [subjectId], references: [subjectId], map: "fk_fact_class_subject")
    factRegister                              FactRegister[]
    factRoomUsage                             FactRoomUsage[]
    lecturer                                  Lecturer[]

    @@unique([subjectId, courseId, semesterYear, semesterPart, sec], map: "unique_class_naja")
    @@index([courseId], map: "course_id")
    @@index([classtimeId1], map: "idx_classtime1")
    @@index([classtimeId2], map: "idx_classtime2")
    @@index([subjectId], map: "idx_subject")
    @@map("fact_class")
}

model FactLeave {
    factLeaveId      Int                       @unique(map: "fact_leave_id") @default(autoincrement()) @map("fact_leave_id")
    leaveTypeId      Int                       @map("leave_type_id")
    studentId        Int                       @map("student_id")
    advisorId        Int                       @map("advisor_id")
    type             FactLeaveType
    dateStart        DateTime?                 @map("date_start") @db.Date
    dateEnd          DateTime?                 @map("date_end") @db.Date
    totalDay         Int                       @map("total_day")
    leaveReason      String?                   @map("leave_reason") @db.Text
    rejectReason     String?                   @map("reject_reason") @db.Text
    statusAdvisor    FactLeaveStatusAdvisor    @default(Pending)
    statusDepartHead FactLeaveStatusDepartHead @default(NotRequired)
    statusDean       FactLeaveStatusDean       @default(NotRequired)
    statusFinal      FactLeaveStatusFinal      @default(Pending)
    filePath         String?                   @map("file_path") @db.VarChar(255)
    createdAt        DateTime                  @default(now()) @map("created_at") @db.Timestamp(0)
    addressDetail    String?                   @map("address_detail") @db.Text
    phone            String?                   @db.VarChar(10)
    email            String?                   @db.VarChar(255)
    teacher          Teacher                   @relation(fields: [advisorId], references: [teacherId], onUpdate: NoAction, map: "advisor_teacher_id_ibfk")
    leaveType        LeaveType                 @relation(fields: [leaveTypeId], references: [leaveTypeId], onDelete: NoAction, onUpdate: NoAction, map: "fact_leave_ibfk_1")
    student          Student                   @relation(fields: [studentId], references: [studentId], onDelete: NoAction, onUpdate: NoAction, map: "fact_leave_ibfk_2")
    factLeaveSubject FactLeaveSubject[]

    @@id([factLeaveId, leaveTypeId])
    @@index([advisorId], map: "advisor_teacher_id")
    @@index([factLeaveId, leaveTypeId], map: "fact_leave_index_0")
    @@index([leaveTypeId], map: "leave_type_id")
    @@index([studentId], map: "student_id")
    @@map("fact_leave")
}

model FactLeaveSubject {
    factLeaveSubjectId Int            @id @unique(map: "fact_leave_subject_id") @default(autoincrement()) @map("fact_leave_subject_id")
    factLeaveId        Int?           @map("fact_leave_id")
    factRegisId        Int?           @map("fact_regis_id")
    factRoomUsageId    Int?           @map("fact_room_usage_id")
    factLeave          FactLeave?     @relation(fields: [factLeaveId], references: [factLeaveId], onDelete: NoAction, onUpdate: NoAction, map: "fact_leave_subject_ibfk_1")
    factRegister       FactRegister?  @relation(fields: [factRegisId], references: [regisId], onDelete: NoAction, onUpdate: NoAction, map: "fact_register_leave-subject_ibfk")
    factRoomUsage      FactRoomUsage? @relation(fields: [factRoomUsageId], references: [roomUsageId], onDelete: NoAction, onUpdate: NoAction, map: "fact_room_usage_leave-subject_ibfk")

    @@index([factLeaveId], map: "fact_leave_id")
    @@index([factLeaveSubjectId], map: "fact_register_id")
    @@index([factRegisId], map: "fact_register_leave-subject_ibfk")
    @@index([factRoomUsageId], map: "fact_room_usage_id")
    @@map("fact_leave_subject")
}

model FactRoomUsage {
    roomUsageId      Int                @id @default(autoincrement()) @map("room_usage_id")
    dateKey          Int                @map("date_key")
    classId          Int                @map("class_id")
    roomId           Int                @map("room_id")
    teacherId        Int                @map("teacher_id")
    classtimeId      Int                @map("classtime_id")
    createdAt        DateTime           @default(now()) @map("created_at") @db.Timestamp(0)
    isCurrent        Boolean?           @default(true) @map("is_current")
    effectiveStartTs DateTime           @default(now()) @map("effective_start_ts") @db.Timestamp(0)
    effectiveEndTs   DateTime?          @map("effective_end_ts") @db.Timestamp(0)
    changeComment    String?            @map("change_comment") @db.VarChar(255)
    factLeaveSubject FactLeaveSubject[]
    factClass        FactClass          @relation(fields: [classId], references: [classId], onDelete: NoAction, map: "fk_room_usage_class")
    classtime        Classtime          @relation(fields: [classtimeId], references: [classtimeId], onDelete: NoAction, map: "fk_room_usage_classtime")
    dimDate          DimDate            @relation(fields: [dateKey], references: [dateKey], onDelete: NoAction, map: "fk_room_usage_date")
    room             Room               @relation(fields: [roomId], references: [roomId], onDelete: NoAction, map: "fk_room_usage_room")
    teacher          Teacher            @relation(fields: [teacherId], references: [teacherId], onDelete: NoAction, map: "fk_room_usage_teacher")

    @@unique([dateKey, roomId, classtimeId, isCurrent], map: "uq_room_usage_current")
    @@index([classId], map: "idx_class")
    @@index([classtimeId], map: "idx_classtime")
    @@index([dateKey], map: "idx_date")
    @@index([roomId], map: "idx_room")
    @@index([teacherId], map: "idx_teacher")
    @@map("fact_room_usage")
}

model FactStudent {
    studentId        Int            @map("student_id")
    schoolId         Int            @map("school_id")
    departmentId     Int            @map("department_id")
    programId        Int            @map("program_id")
    teacherId        Int            @map("teacher_id")
    coursePlanId     Int            @map("course_plan_id")
    admissionRoundId Int            @map("admission_round_id")
    studentStatusId  Int            @map("student_status_id")
    admissionYear    Int            @map("admission_year")
    studyGeneration  Int            @map("study_generation")
    school           School         @relation(fields: [schoolId], references: [schoolId], onUpdate: Restrict, map: "fact_student_ibfk_1")
    studentStatus    StudentStatus  @relation(fields: [studentStatusId], references: [studentStatusId], onUpdate: Restrict, map: "fact_student_ibfk_10")
    program          Program        @relation(fields: [programId], references: [programId], onUpdate: Restrict, map: "fact_student_ibfk_3")
    admissionRound   AdmissionRound @relation(fields: [admissionRoundId], references: [admissionRoundId], onUpdate: Restrict, map: "fact_student_ibfk_4")
    department       Department     @relation(fields: [departmentId], references: [deptId], onUpdate: Restrict, map: "fact_student_ibfk_6")
    teacher          Teacher        @relation(fields: [teacherId], references: [teacherId], onUpdate: Restrict, map: "fact_student_ibfk_7")
    coursePlan       CoursePlan     @relation(fields: [coursePlanId], references: [coursePlanId], onUpdate: Restrict, map: "fact_student_ibfk_8")
    student          Student        @relation(fields: [studentId], references: [studentId], onDelete: Cascade, map: "fact_student_ibfk_9")

    @@id([studentId, schoolId, studentStatusId, departmentId, programId, teacherId, coursePlanId, admissionRoundId])
    @@index([admissionRoundId], map: "admission_round_id")
    @@index([coursePlanId], map: "course_id")
    @@index([departmentId], map: "department_id")
    @@index([studentStatusId], map: "fact_student_ibfk_10")
    @@index([programId], map: "program_id")
    @@index([schoolId], map: "school_id")
    @@index([teacherId], map: "teacher_id")
    @@map("fact_student")
}

model LeaveType {
    leaveTypeId Int           @id @default(autoincrement()) @map("leave_type_id")
    type        LeaveTypeType
    minDay      Int           @map("min_day")
    required    Int           @default(0) @db.TinyInt
    factLeave   FactLeave[]

    @@map("leave_type")
}

model Lecturer {
    lecturerId Int       @id @default(autoincrement()) @map("lecturer_id")
    teacherId  Int       @map("teacher_id")
    classId    Int       @map("class_id")
    factClass  FactClass @relation(fields: [classId], references: [classId], onDelete: Cascade, map: "fk_lecturer_class")
    teacher    Teacher   @relation(fields: [teacherId], references: [teacherId], onDelete: Cascade, map: "fk_lecturer_teacher")

    @@index([classId], map: "idx_class_id")
    @@index([teacherId], map: "idx_teacher_id")
    @@map("lecturer")
}

model Program {
    programId   Int           @id @default(autoincrement()) @map("program_id")
    langProgram String        @map("lang_program") @db.VarChar(20)
    nameProgram String        @map("name_program") @db.VarChar(20)
    factStudent FactStudent[]

    @@map("program")
}

model Province {
    provinceId   Int      @id @default(autoincrement()) @map("province_id")
    provinceName String   @map("province_name") @db.VarChar(50)
    regionId     Int      @map("region_id")
    region       Region   @relation(fields: [regionId], references: [regionId], onDelete: Cascade, map: "province_ibfk_1")
    school       School[]

    @@index([regionId], map: "region_id")
    @@map("province")
}

model Region {
    regionId   Int        @id @default(autoincrement()) @map("region_id")
    regionName String     @map("region_name") @db.VarChar(30)
    province   Province[]

    @@map("region")
}

model Room {
    roomId             Int             @id @default(autoincrement()) @map("room_Id")
    buildingBuildingId Int?            @map("building_building_Id")
    roomCode           String          @map("room_code") @db.VarChar(10)
    roomCapacity       Decimal?        @map("room_capacity") @db.Decimal(10, 0)
    roomType           RoomRoomType?
    classroom          Classroom[]
    factRoomUsage      FactRoomUsage[]
    building           Building?       @relation(fields: [buildingBuildingId], references: [buildingId], map: "fk_room_building1")

    @@index([buildingBuildingId], map: "fk_room_building1")
    @@map("room")
}

model School {
    schoolId    Int           @id @default(autoincrement()) @map("school_id")
    schoolName  String        @map("school_name") @db.VarChar(150)
    provinceId  Int           @map("province_id")
    factStudent FactStudent[]
    province    Province      @relation(fields: [provinceId], references: [provinceId], onDelete: Cascade, map: "school_ibfk_1")

    @@index([provinceId], map: "province_id")
    @@map("school")
}

model SubCredit {
    subCreditId  Int       @id @default(autoincrement()) @map("sub_credit_id")
    credit       Int
    lectureHours Int       @map("lecture_hours")
    labHours     Int       @map("lab_hours")
    bySelfHours  Int       @map("by_self_hours")
    subject      Subject[]

    @@map("sub_credit")
}

model Course {
    courseId              Int          @id @default(autoincrement()) @map("course_id")
    nameCourseTh          String       @map("name_course_th") @db.VarChar(150)
    nameCourseUse         String       @map("name_course_use") @db.VarChar(50)
    nameCourseEng         String       @map("name_course_eng") @db.VarChar(150)
    nameFullDegreeTh      String       @map("name_full_degree_th") @db.VarChar(150)
    nameFullDegreeEng     String       @map("name_full_degree_eng") @db.VarChar(150)
    nameInitialsDegreeTh  String       @map("name_initials_degree_th") @db.VarChar(100)
    nameInitialsDegreeEng String       @map("name_initials_degree_eng") @db.VarChar(100)
    departmentId          Int          @map("department_id")
    department            Department   @relation(fields: [departmentId], references: [deptId], onDelete: Cascade, map: "fk_course_department")
    coursePlan            CoursePlan[]
    factClass             FactClass[]
    subject               Subject[]

    @@index([departmentId], map: "fk_course_department")
    @@map("course")
}

model SubjectType {
    subjectTypeId   Int       @id @default(autoincrement()) @map("subject_type_id")
    nameSubjectType String    @map("name_subject_type") @db.VarChar(20)
    subject         Subject[]

    @@map("subject_type")
}

model Teacher {
    teacherId       Int               @id @default(autoincrement()) @map("teacher_id")
    username        String            @db.VarChar(20)
    teacherCode     String?           @map("teacher_code") @db.VarChar(10)
    firstNameTh     String            @map("first_name_th") @db.VarChar(50)
    titleTeacherTh  String            @map("title_teacher_th") @db.VarChar(10)
    lastNameTh      String            @map("last_name_th") @db.VarChar(50)
    firstNameEng    String            @map("first_name_eng") @db.VarChar(50)
    lastNameEng     String            @map("last_name_eng") @db.VarChar(50)
    departmentId    Int               @map("department_id")
    facultyCheck    Int               @map("faculty_check")
    factLeave       FactLeave[]
    factRoomUsage   FactRoomUsage[]
    factStudent     FactStudent[]
    factTermSummary FactTermSummary[]
    lecturer        Lecturer[]
    department      Department        @relation(fields: [departmentId], references: [deptId], onDelete: Cascade, map: "teacher_ibfk_1")

    @@index([departmentId], map: "department_id")
    @@index([teacherId, teacherCode], map: "teacher_id_teacher_code")
    @@map("teacher")
}
